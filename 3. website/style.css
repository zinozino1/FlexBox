/* Common CSS */
.inner {
    /* 아래 두줄 이외의 기능은 넣지 않는 것이 좋다 ex) d:f*/
    width: 1300px;
    margin: auto;
    border: 1px solid red;
}

/* Header */
header {
    position: fixed;
    /* 중요 - fixed하면 w100p무조건 넣어줘야함 */
    width: 100%;
}
header .banner {
    background-color: black;
}
header .banner .lnb {
    width: 1300px;
    margin: auto;
    /* div안의 a태그이기 때문에 flex쓸 필요 없음 */
    /* text-align: right; */
    display: flex;
    justify-content: flex-end;
    padding: 12px;
}
header .banner .lnb a {
    margin-left: 20px;
    color: #ddd;
}
header .banner .lnb a:hover {
    color: #bbb;
}
header .banner .lnb a em {
    color: #bbb;
}
header nav {
    padding-top: 20px;
    width: 1300px;
    margin: auto;
    display: flex;
    justify-content: space-between;
    background-color: transparent;
}
header nav .logo {
}
header nav .gnb {
    display: flex;
    align-items: center;
}
header nav .gnb li {
    margin-left: 40px;
}
header nav .gnb li a {
    color: #ddd;
}
header nav .gnb li a:hover {
    color: #333;
    transition: 0.5s;
}

/* Intro */
.intro {
    /* 처음 웹사이트를 방문했을 때 화면이 꽉차게 */
    /* 잘 보면 height값을 준 div태그가 별로 없다. */
    height: 100vh;
    background: url("./images/intro.jpg") no-repeat center center;
    /* 매우 중요 - 백그라운드랑 그냥 이미지태그로 넣는 것은 크기 지정방법이 다르다.*/
    background-size: cover;
    display: flex;
    align-items: center;
}
.intro .heading {
    color: white;
    text-align: center;
}
.intro .heading h1 {
    font-size: 56px;
    margin-bottom: 40px;
}
.intro .heading p {
    font-size: 22px;
    line-height: 1.5em;
    padding: 0 150px;
    font-weight: 300;
}

/* about */
.about {
}
.about .inner {
}
.about .inner .about-content {
    padding: 100px 0;
    display: flex;
}
.about .inner .about-content div {
    padding: 50px;
}
.about .inner .about-content .desc {
    flex: 4;
    text-align: center;
    display: flex;
    flex-direction: column;
    justify-content: center;
}
.about .inner .about-content .desc h2 {
    font-size: 30px;
    padding-bottom: 20px;
}
.about .inner .about-content .desc p {
    font-size: 16px;
    font-weight: 300;
    padding-bottom: 20px;
}
.about .inner .about-content .desc a {
    color: crimson;
    font-weight: bold;
}
.about .inner .about-content .desc a:hover {
    text-decoration: underline;
}
.about .inner .about-content .photo {
    flex: 3;
}
/* img를 div로 감싸야 플렉싱하기 편함 */
.about .inner .about-content .photo img {
    width: 100%;
    /* 중첩해야 원하는대로 나옴 */
    border-radius: 60% 60% 50% 65% / 60% 70% 50% 60%;
}

/* Ranking section */
.ranking {
    background-color: #f8f8f8;
}
.ranking .ranking-content {
    padding: 100px 0;
}
.ranking .ranking-content h2 {
    font-size: 30px;
    font-weight: 600;
    margin-bottom: 50px;
}
/* 하나의 item만 작업해놓으면 나머지는 카피페이스트 가능 */
.ranking .ranking-content .items {
    display: flex;
    justify-content: space-between;
}
.ranking .ranking-content .items .item {
    /* content내용을 넣기 전에 width 값과 height값을 넣어주는 것이 좋다. 그래야 작업하기 편함 */
    /* width: 390px; but flex 사용할 시 width필요 없음*/
    /* height: 520px; */
    margin: 30px;
    box-sizing: border-box;
    border-radius: 20px 0 20px 0;
    box-shadow: rgba(0, 0, 0, 0.281) 5px 5px 20px;
    /* 벗어날 때 */
    transition: 0.3s;
}
.ranking .ranking-content .items .item:hover {
    transform: translateY(-20px);
    /* 진입할 때 */
    transition: 0.3s;
}
.ranking .ranking-content .items .item .up-image {
    /* img태그 vs background-image -> 개발 코드가 들어간다면 img로 하는게 상식적이다. 그냥 꾸미는 것만 할 경우 백그라운드가 적절 */
}
.ranking .ranking-content .items .item .up-image img {
    /* 상위 태그가 고정 픽셀이 아니고 유동적이어도 100%가 먹힌다! */
    /* width로 설정하면 height설정 안해도 비율대로 맞춰진다 but 공간이 남게 된다*/
    border-radius: 20px 0 0;
    width: 100%;
    height: 100%;
}
.ranking .ranking-content .items .item .down-desc {
    padding: 40px 30px;
}
.ranking .ranking-content .items .item .down-desc span {
}
.ranking .ranking-content .items .item .down-desc h3 {
    font-size: 20px;
    margin: 15px 0;
    font-weight: 500;
}
.ranking .ranking-content .items .item .down-desc p {
    font-size: 16px;
    font-weight: 300;
}
.ranking .ranking-content .items .item .down-desc a {
    color: #c25a3a;
}
.badge-must {
    background-color: crimson;
    color: white;
    padding: 2px 10px;
    font-size: 16px;
}
.badge-good {
    background-color: royalblue;
    color: white;
    padding: 2px 10px;
    font-size: 16px;
}
.item1 {
    flex: 1;
}
.item2 {
    flex: 1;
}
.item3 {
    flex: 1;
}

/* Testimonial section */
.testimonial {
}
.testimonial .testimonial-content {
    text-align: center;
    padding: 100px 0;
}
.testimonial .testimonial-content hr {
    /* hr태그는 1px 짜리 선이 아님. 블록요소기 때문에 상하좌우 다 있음 */
    border: none;
    height: 4px;
    width: 120px;
    background-color: blue;
    /* block 요소이기 때문에 좌우 auto를 해줘야 함 */
    margin: 40px auto;
}
.testimonial .testimonial-content h2 {
    font-size: 30px;
    font-weight: 300;
    text-transform: uppercase;
}
.testimonial .testimonial-content h2 span {
}
.testimonial .testimonial-content .myslider {
    /* slick 에서 해주기 때문에 flex선언 안해줘도됨 */

    border: 1px solid red;
}
.testimonial .testimonial-content .myslider div {
    height: 300px;
    border: 1px solid blue;
}
.myslider button {
    /* important해줘야함 */
    display: none !important;
}

/* Call Action */

.callaction {
}
.callaction .callaction-content {
    height: 50vh;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    /* 순서꼭 지켜야함 */
    /* 투명도 주는법! */
    background: linear-gradient(
            to right,
            rgba(128, 0, 128, 0.356),
            rgba(255, 166, 0, 0.61)
        ),
        url("./images/callaction-01.jpg");

    background-size: cover;
}
.callaction .callaction-content p {
    font-size: 50px;
    padding: 0 400px;
    text-align: center;
    line-height: 1.5em;
    color: white;
    font-weight: 300;
}
.callaction .callaction-content p span {
    font-weight: 500;
}
.callaction .callaction-content button {
    width: 200px;
    height: 40px;
    background-color: rgb(90, 226, 90);
    color: white;
    border-radius: 5px;
    border: none;
    box-shadow: white 0 0 5px;
}
.callaction .callaction-content button:hover {
    box-shadow: white 0 0 10px;
    transition: 0.5s;
}

/* Festival */
.festival-container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 40vh;
    background-color: #333;
    color: white;
}
.festival {
}
.festival .festival-header {
}
.festival .festival-header p {
    font-size: 24px;
    font-weight: 300;
}
.festival .festival-header p span {
    font-weight: bold;
}
.festival .festival-btn {
    display: flex;

    width: 500px;
}

.festival-btn1 {
    border-radius: 5px;
    background-color: rgb(236, 214, 87);
    padding: 6px;

    text-align: center;
    flex: 1;
}
.festival-btn1:hover {
    box-shadow: white 0 0 5px;
    transition: 0.5s;
}
.festival-btn1 a {
    color: white;
}
.festival-btn2 {
    border-radius: 5px;
    background-color: #eee;
    padding: 6px;
    flex: 1;
    text-align: center;

    margin-left: 40px;
}
.festival-btn2:hover {
    box-shadow: white 0 0 5px;
    transition: 0.5s;
}

/* footer */
footer {
    background-color: #000;
}
.footer-content {
    display: flex;
    padding: 40px 0;
}
.footer-content ul {
    text-align: center;
}
.footer-content ul li {
}
.footer-content ul li:first-child {
    font-weight: 500;
    color: #d9d9d9;
}
.footer-content ul li a {
    color: #959595;
}
.footer-content .Community {
    flex: 1;
}
.footer-content .Network {
    flex: 1;
}
.footer-content .help {
    flex: 2;
}
.footer-content .help li {
    padding: 0 100px;
    color: #959595;
}
.footer-content .help li:nth-last-child(1) {
    padding-top: 20px;
}
